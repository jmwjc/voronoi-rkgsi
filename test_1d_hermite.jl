using ApproxOperator

n‚Çö = 2
L = 1.0
dx = L/(n‚Çö-1)

# variables in ùìí
x = [i*dx for i in 0:(n‚Çö-1)]
s = 1.5*dx*ones(n‚Çö)

data_ùìí = Dict([:x=>(1,x),:y=>(1,zeros(n‚Çö)),:z=>(1,zeros(n‚Çö)),:s=>(1,s)])
ùìí = [Node{(:ùêº,),1}((i,),data_ùìí) for i in 1:n‚Çö]

# variables in ùìñ
aps = ApproxOperator.ReproducingKernel{:Linear1D,:‚óã,:Constant,:Vor1}[]
data_ùìñ = Dict([:x=>(1,zeros(inte*n))])

for i in 1:n‚Çö
    if i == 1
        x‚ÇÅ = x[1]
        x‚ÇÇ = 0.5*(x[1]+x[2])
    elseif i == n‚Çö
        x‚ÇÅ = 0.5*(x[n‚Çö-1]+x[n‚Çö])
        x‚ÇÇ = x[n‚Çö]
    else
        x‚ÇÅ = 0.5*(x[i-1]+x[i])
        x‚ÇÇ = 0.5*(x[i]+x[i+1])
    end
end

# calculate shape functions